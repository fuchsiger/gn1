mic   _utils.py          INFO     Log file created
mic   _utils.py          INFO     OS: {'name': 'Windows', 'data': {'version': '10.0.17763', 'release': '10', 'platform': 'Windows-10-10.0.17763-SP0'}}
mic   _utils.py          INFO     MIC Version: 1.3.7
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'start', 'command_parameters': {'name': {'value': 'gn1', 'type': 'str'}, 'image': {'value': None, 'type': 'NoneType'}}}
mic   initialization.py  DEBUG    detecting framework(s): [<Framework.GENERIC: ('general', 'mintproject/generic:latest')>]
mic   initialization.py  DEBUG    OS name: windows
mic   initialization.py  INFO     Windows os detected. Converting line endings
mic   docker.py          INFO     Downloading and building base docker image
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\gn_1\\mic\\mic.yaml', 'data': {'key': 'name', 'value': 'gn1'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\gn_1\\mic\\mic.yaml', 'data': {'key': 'docker_image', 'value': 'gn1:latest'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\gn_1\\mic\\mic.yaml', 'data': {'key': 'framework', 'value': <Framework.GENERIC: ('general', 'mintproject/generic:latest')>}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\gn_1\\mic\\mic.yaml', 'data': {'key': 'container_name', 'value': 'gn1_783e1e24'}}
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'add_parameters', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'name': {'value': 'snowfalltemp', 'type': 'str'}, 'value': {'value': 1.5, 'type': 'float'}, 'overwrite': {'value': False, 'type': 'bool'}, 'description': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Adding parameter: {'snowfalltemp': {'name': 'snowfalltemp', 'default_value': 1.5, 'type': 'float', 'description': ''}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'snowfalltemp': {'name': 'snowfalltemp', 'default_value': 1.5, 'type': 'float', 'description': ''}}}}
mic   commands.py        INFO     add_parameters done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'configs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'configuration_files': {'value': ('/tmp/mint/inputs/basins.bsn',), 'type': 'tuple'}, 'auto_param': {'value': False, 'type': 'bool'}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'configs', 'value': {'basins_bsn': {'path': 'inputs/basins.bsn', 'format': 'bsn'}}}}
mic   commands.py        INFO     Added config file: /tmp/mint/inputs/basins.bsn
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'step', 'value': 2}}
mic   commands.py        INFO     configs done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'inputs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'custom_inputs': {'value': (), 'type': 'tuple'}}}
mic   commands.py        DEBUG    Inputs found from reprozip: ['/tmp/mint/inputs']
mic   commands.py        DEBUG    code files found from reprozip: ['/tmp/mint/inputs/swat670']
mic   commands.py        INFO     Compressing the input directory (inputs)
mic   commands.py        INFO     Input added: inputs
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'inputs', 'value': {'inputs_zip': {'path': 'inputs.zip', 'format': 'zip'}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'code_files', 'value': {'swat670': {'path': 'inputs/swat670', 'format': ''}}}}
mic   commands.py        INFO     inputs done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'outputs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'custom_outputs': {'value': (), 'type': 'tuple'}}}
mic   commands.py        DEBUG    Outputs found from reprozip: ['/tmp/mint/inputs/output.sed', '/tmp/mint/inputs/output.sub', '/tmp/mint/inputs/output.std', '/tmp/mint/inputs/chan.deg', '/tmp/mint/inputs/bmp-sedfil.out', '/tmp/mint/inputs/output.rch', '/tmp/mint/inputs/watout.dat', '/tmp/mint/inputs/output.rsv', '/tmp/mint/inputs/output.hru', '/tmp/mint/inputs/septic.out', '/tmp/mint/inputs/hyd.out', '/tmp/mint/inputs/bmp-ri.out', '/tmp/mint/inputs/input.std', '/tmp/mint/inputs/fin.fin']
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'outputs', 'value': {'output_sed': {'path': 'inputs/output.sed', 'format': 'sed'}, 'output_sub': {'path': 'inputs/output.sub', 'format': 'sub'}, 'output_std': {'path': 'inputs/output.std', 'format': 'std'}, 'chan_deg': {'path': 'inputs/chan.deg', 'format': 'deg'}, 'bmp-sedfil_out': {'path': 'inputs/bmp-sedfil.out', 'format': 'out'}, 'output_rch': {'path': 'inputs/output.rch', 'format': 'rch'}, 'watout_dat': {'path': 'inputs/watout.dat', 'format': 'dat'}, 'output_rsv': {'path': 'inputs/output.rsv', 'format': 'rsv'}, 'output_hru': {'path': 'inputs/output.hru', 'format': 'hru'}, 'septic_out': {'path': 'inputs/septic.out', 'format': 'out'}, 'hyd_out': {'path': 'inputs/hyd.out', 'format': 'out'}, 'bmp-ri_out': {'path': 'inputs/bmp-ri.out', 'format': 'out'}, 'input_std': {'path': 'inputs/input.std', 'format': 'std'}, 'fin_fin': {'path': 'inputs/fin.fin', 'format': 'fin'}}}}
mic   commands.py        INFO     outputs done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'wrapper', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}}}
mic   commands.py        INFO     Generating wrapper code
mic   reprozip.py        DEBUG    Pre runner code: '\ncp -rv swat670 inputs/swat670'
mic   reprozip.py        DEBUG    Runner code: '\npushd inputs\n./swat670\npopd'
mic   initialization.py  DEBUG    run file rendered
mic   initialization.py  DEBUG    io file rendered
mic   commands.py        INFO     wrapper done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'run', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}}}
mic   executor.py        INFO     Running: ./run   -i1 /tmp/mint/mic/executions/12_06_21_24_41/src/inputs.zip  -o1 output_sed.sed -o2 output_sub.sub -o3 output_std.std -o4 chan_deg.deg -o5 bmp-sedfil_out.out -o6 output_rch.rch -o7 watout_dat.dat -o8 output_rsv.rsv -o9 output_hru.hru -o10 septic_out.out -o11 hyd_out.out -o12 bmp-ri_out.out -o13 input_std.std -o14 fin_fin.fin  -p1 1.5
mic   executor.py        DEBUG    exe_arr: ['./run', '-i1', '/tmp/mint/mic/executions/12_06_21_24_41/src/inputs.zip', '-o1', 'output_sed.sed', '-o2', 'output_sub.sub', '-o3', 'output_std.std', '-o4', 'chan_deg.deg', '-o5', 'bmp-sedfil_out.out', '-o6', 'output_rch.rch', '-o7', 'watout_dat.dat', '-o8', 'output_rsv.rsv', '-o9', 'output_hru.hru', '-o10', 'septic_out.out', '-o11', 'hyd_out.out', '-o12', 'bmp-ri_out.out', '-o13', 'input_std.std', '-o14', 'fin_fin.fin', '-p1', '1.5']
mic   commands.py        INFO     Run passed
mic   commands.py        INFO     run done
mic   commands.py        INFO     start done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'upload', 'command_parameters': {'mic_file': {'value': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\gn_1\\mic\\mic.yaml', 'type': 'str'}, 'profile': {'value': 'default', 'type': 'str'}, 'model_configuration': {'value': True, 'type': 'bool'}, 'data_transformation': {'value': None, 'type': 'NoneType'}}}
mic   github.py          INFO     Creating the git repository
mic   github.py          INFO     Compressing code
mic   github.py          INFO     Creating a new commit
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\gn_1\\mic\\mic.yaml', 'data': {'key': 'github_repo_url', 'value': 'https://github.com/fuchsiger/gn1.git'}}
mic   github.py          INFO     Creating a new version
mic   github.py          DEBUG    New version: 20.12.1
mic   github.py          INFO     Pushing changes to the server
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\gn_1\\mic\\mic.yaml', 'data': {'key': 'version', 'value': '20.12.1'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\gn_1\\mic\\mic.yaml', 'data': {'key': 'mint_component_url', 'value': 'https://raw.githubusercontent.com/fuchsiger/gn1/master/mint_component.zip'}}
mic   github.py          INFO     Push complete: {'repository': 'https://github.com/fuchsiger/gn1.git', 'version': '20.12.1'}
mic   docker.py          INFO     Publish docker image
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\gn_1\\mic\\mic.yaml', 'data': {'key': 'docker_image', 'value': 'fuchsiger/gn1:20.12.1'}}
mic   commands.py        INFO     upload done
mic   initialization.py  INFO     When creating base dir found base directory already exists: D:\MINT\MINT_Homepage_Modelle\Scenario_Forecast\gn_1\mic
mic   initialization.py  INFO     User aborted initialization
mic   initialization.py  INFO     When creating base dir found base directory already exists: D:\MINT\MINT_Homepage_Modelle\Scenario_Forecast\gn_1\mic
mic   initialization.py  INFO     MIC has initialized the component
mic   _utils.py          INFO     Log file created
mic   _utils.py          INFO     OS: {'name': 'Windows', 'data': {'version': '10.0.17763', 'release': '10', 'platform': 'Windows-10-10.0.17763-SP0'}}
mic   _utils.py          INFO     MIC Version: 1.3.7
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'start', 'command_parameters': {'name': {'value': 'gn2', 'type': 'str'}, 'image': {'value': None, 'type': 'NoneType'}}}
mic   initialization.py  DEBUG    detecting framework(s): [<Framework.GENERIC: ('general', 'mintproject/generic:latest')>]
mic   initialization.py  DEBUG    OS name: windows
mic   initialization.py  INFO     Windows os detected. Converting line endings
mic   docker.py          INFO     Downloading and building base docker image
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\gn_1\\mic\\mic.yaml', 'data': {'key': 'name', 'value': 'gn2'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\gn_1\\mic\\mic.yaml', 'data': {'key': 'docker_image', 'value': 'gn2:latest'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\gn_1\\mic\\mic.yaml', 'data': {'key': 'framework', 'value': <Framework.GENERIC: ('general', 'mintproject/generic:latest')>}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\gn_1\\mic\\mic.yaml', 'data': {'key': 'container_name', 'value': 'gn2_ea27c1b7'}}
mic   commands.py        INFO     start done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'upload', 'command_parameters': {'mic_file': {'value': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\gn_1\\mic\\mic.yaml', 'type': 'str'}, 'profile': {'value': 'default', 'type': 'str'}, 'model_configuration': {'value': True, 'type': 'bool'}, 'data_transformation': {'value': None, 'type': 'NoneType'}}}
mic   github.py          INFO     Creating the git repository
mic   github.py          INFO     Compressing code
mic   github.py          INFO     Creating a new commit
